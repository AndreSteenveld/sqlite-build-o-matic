#!/usr/bin/env bash

#
# Taken from BASH3 Boilerplate
#

# Exit on error. Append "|| true" if you expect an error.
set -o errexit
# Exit on error inside any functions or subshells.
set -o errtrace
# Do not allow use of undefined vars. Use ${VAR:-} to use an undefined VAR
set -o nounset
# Catch the error in case mysqldump fails (but gzip succeeds) in `mysqldump |gzip`
set -o pipefail

declare sqlite_docker_command=${SQLITE_DOCKER_COMMAND:-docker}
declare sqlite_docker_registry=${SQLITE_DOCKER_REGISTRY:-docker.io/andresteenveld}
declare sqlite_version=${SQLITE_VERSION:-latest}
declare sqlite_source=${SQLITE_SOURCE:-//}
declare sqlite_workdir=${SQLITE_WORKDIR:-//-/$PWD}

declare image="$sqlite_docker_registry/sqlite:$sqlite_version"

docker image inspect "$image" &> /dev/null \
    || docker image pull --quiet "$image" &> /dev/null

eval "$sqlite_docker_command" run                   \
    --rm --interactive --tty                        \
    --workdir "$sqlite_workdir"                     \
    --mount type=bind,src="$sqlite_source",dst=//-  \
    --entrypoint //usr/bin/sqlite3                  \
    "$image" "$@"


